% mcp3008で収集したデータをソート
% https://github.com/yus988/raspi_sensing/blob/main/mcp3008test.py

% Mx の列説明
% 第1列：チャンネルごとに分けた生データ
% 第2列：生データをタイムテーブル化したもの
% 第3列：フィルター後のデータ

clear
Mx = cell(6,2);% インポート用のセル
% fs = 11e4;%サンプル周波数
% サンプリング周波数を、読み込みデータから求める

% csvデータ読み込み 時間：電圧：ch
list = dir('*.csv');
% fileName = append('gun_neck-1-3_arm-4-6_01-16_15-39-22','.csv');
% fileName = append('walk&jump_neck1-3_leg4-6_01-16_15-30-02','.csv');
fileName = append(list.name);
data =  readmatrix(fileName);

% channel別でソート
% Mx 1: ch毎に分類したデータ、2: DC TimeTable, 3: AC TimeTable
for i = 0:5
    % chごとに振り分け(if の短縮系）
    Mx{i+1,1} = data(data(:,3)==i,:);
    
    % サンプリング周波数を、読み込みデータから求める
    Fs = 1/mean(diff(Mx{i+1,1}(:,1))); % 平均サンプルレート
    y = Mx{i+1,1}(:,2); % 生データ列。以後の処理に使用
    Mx{i+1,2} = timetable(y,'SampleRate',Fs);

%    フィルター部分。かけ終わった後、第三列に代入
    yf = lowpass(y,1000,Fs,'Steepness',0.85,'StopbandAttenuation',60);
    yf = highpass(yf,5,Fs,'Steepness',0.85,'StopbandAttenuation',60);
    Mx{i+1,3} = yf;
    Mx{i+1,4} = timetable(yf,'SampleRate',Fs);

end

% filter
% https://jp.mathworks.com/help/signal/examples/signal-smoothing.html

% yn = Mx{1,1}(:,2);
% yf = sgolayfilt(yn,1,19); % 
% yf = medfilt1(yf,10);
% TTfilter = timetable(yf,'SampleRate',Fs);

TT1 = Mx{1,2};
TT2 = Mx{2,2};
TT3 = Mx{3,2};
TT4 = Mx{4,2};
TT5 = Mx{5,2};
TT6 = Mx{6,2};
% 
TT1_F = Mx{1,4};
TT2_F = Mx{2,4};
TT3_F = Mx{3,4};
TT4_F = Mx{4,4};
TT5_F = Mx{5,4};
TT6_F = Mx{6,4};

%% 音声信号の生成
%  Fs = round(Fs);
%  audiowrite('neck_walk_x.wav',Mx{1,3},Fs);
%  audiowrite('leg_walk_x.wav',Mx{4,3},Fs);
% 
%  audiowrite('neck_gun_x.wav',Mx{1,3},Fs);
%  audiowrite('arm_gun_x.wav',Mx{4,3},Fs);
 
% 信号からの対象の時間領域の抽出

% Generated by MATLAB(R) 9.8 and Signal Processing Toolbox 8.4.
% Generated on: 16-Jan-2021 22:05:45



%%

% パラメーター
% timeLimits = seconds([29.4925 31.9151]); % 秒

% TT1_walk_Var1_ROI_ROI = TT1_walk_Var1_ROI(:,'Var1');
% TT1_walk_Var1_ROI_ROI = TT1_walk_Var1_ROI_ROI(timerange(timeLimits(1),timeLimits(2),'closed'),1);


% function y = preprocess(x,tx)
%  入力 x の前処理
%    This function expects an input vector x and a vector of time values
%    tx. tx is a numeric vector in units of seconds.
%    Follow the timetable documentation (type 'doc timetable' in
%    command line) to learn how to index into a table variable and its time
%    values so that you can pass them into this function.

% Generated by MATLAB(R) 9.8 and Signal Processing Toolbox 8.4.
% Generated on: 16-Jan-2021 23:01:59


%% 
% サンプリングレートの集計。diffを使えば1行で行ける
%     arrSize = size( Mx{i+1,1},1) - 1;
%     tmp = zeros(arrSize,1);
%     
%     for k = 1: arrSize % 収集したデータ配列の長さ分
% %      サンプリングレート集計用の配列
%        tmp(k,:) =  Mx{i+1,1}(k+1,1) - Mx{i+1,1}(k,1);
%     end
%     fs = 1 / mean(tmp); % サンプリングレート

